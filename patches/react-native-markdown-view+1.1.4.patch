diff --git a/node_modules/react-native-markdown-view/MarkdownView.js b/node_modules/react-native-markdown-view/MarkdownView.js
index 238466d..639ab46 100644
--- a/node_modules/react-native-markdown-view/MarkdownView.js
+++ b/node_modules/react-native-markdown-view/MarkdownView.js
@@ -1,7 +1,5 @@
 /* @flow */
 
-import PropTypes from 'prop-types';
-
 import React, {
   Component,
 } from 'react'
@@ -103,66 +101,4 @@ class MarkdownView extends Component {
   }
 }
 
-MarkdownView.propTypes = {
-  ...View.propTypes,
-
-  /**
-   * An object overriding or providing additional rules for parsing and rendering Markdown. Keys
-   * are rule names (you can define your own, or override existing rules), and values are an object
-   * of the form:
-   *
-   *   {
-   *     match: RegExp,
-   *     parse: (match, nestedParse, state),
-   *     render: (node, output, state, styles)
-   *   }
-   *
-   * match: A Regex to be executed against the MarkdownView's text.
-   *
-   * parse: A function that returns an AST 'node' object to pass to the rules' render method. If
-   *        the object returned has a 'type' key, rendering will be deferred to the rule matching
-   *        the value of 'type'.
-   *
-   *   match: Return value of match.exec()
-   *   nestedParse: (string, state) => object, call this to parse nested nodes.
-   *   state: Parser state object, you can attach your own state properties if desirable.
-   *
-   * render: A function that returns the rendered node (and its children). Typically you'll return
-   *         a React Native view component.
-   *
-   *   node: An AST node. Please refer to the Flow types in `types.js`.
-   *   output: A function that can be used to render nested/children nodes. Typically you'll want
-   *           call `output(node.children)` and use that as the content of the component you're
-   *           returning.
-   *   state: Renderer state object. You can attach your own state to this object and use it, for
-   *          example, to render nodes differently depending on their parents/ancestors.
-   *   styles: An object containing React Native styles that you can use for rendering components.
-   *
-   * Default rendering rules have keys:
-   *
-   *   heading, hr, codeBlock, blockQuote, list, table, newline, paragraph, link, image, em,
-   *   strong, u, del, inlineCode, br, text
-   *
-   * Default parse-only rules (which defer rendering to another rule) have keys:
-   *
-   *   nptable, lheading, fence, def, escape, autolink, mailto, url, reflink, refimage,
-   *
-   */
-  rules: PropTypes.objectOf(PropTypes.objectOf(PropTypes.func)),
-
-  /**
-   * An object providing styles to be passed to a corresponding rule render method. Keys are
-   * rule/node names and values are React Native style objects. If a style is defined here and a
-   * default style exists, they will me merged, with style properties defined here taking
-   * precedence.
-   */
-  styles: PropTypes.objectOf(PropTypes.object),
-
-  /**
-   * Callback function for when a link is pressed. The callback receives the URL of the link as a
-   * string (first and only argument).
-   */
-  onLinkPress: PropTypes.func,
-}
-
 export default MarkdownView
