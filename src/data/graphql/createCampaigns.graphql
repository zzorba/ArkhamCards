# import FullCampaign from 'fragments.graphql'

mutation uploadNewCampaign(
  $campaignId: Int!,
  $cycleCode: String!,
  $standaloneId: jsonb,
  $showInterludes: Boolean,
  $name: String!,
  $difficulty: String,
  $campaignNotes: jsonb,
  $scenarioResults: jsonb,
  $chaosBag: jsonb,
  $weaknessSet: jsonb,
  $guideVersion: Int,
  $inputs: [guide_input_insert_input!]!,
  $achievements: [guide_achievement_insert_input!]!,
  $investigator_data: [investigator_data_insert_input!]!,
  $investigators: [campaign_investigator_insert_input!]!
) {
  insert_guide_input(
    objects: $inputs
  ) {
    affected_rows
    returning {
      id
      campaign_id
      scenario
      step
      payload
      created_at
      inserted_idx
    }
  }
  insert_guide_achievement(
    objects: $achievements
  ) {
    affected_rows
  }
  insert_investigator_data(objects: $investigator_data) {
    affected_rows
  }
  insert_campaign_investigator(objects: $investigators) {
    affected_rows
  }
  update_campaign_by_pk(
  	pk_columns: { id: $campaignId}
		_set: {
      name: $name
      cycleCode: $cycleCode
      standaloneId: $standaloneId
      difficulty: $difficulty
      campaignNotes: $campaignNotes
      chaosBag: $chaosBag
      showInterludes: $showInterludes
      scenarioResults: $scenarioResults
      weaknessSet: $weaknessSet
      guide_version: $guideVersion
    }
	) {
    ...FullCampaign
    link_a_campaign {
      ...MiniCampaign
    }
    link_b_campaign {
      ...MiniCampaign
    }
    campaign_guide {
      ...FullCampaignGuideState
    }
  }
}
