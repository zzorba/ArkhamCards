mutation uploadChaosBagResults(
  $id: Int!,
  $bless: Int!,
  $curse: Int!,
  $drawn: jsonb!,
  $sealed: jsonb!,
  $totalDrawn: Int!,
  $tarot: chaos_bag_tarot_mode_enum
) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $id }
    _set: {
      bless: $bless,
      curse: $curse,
      drawn: $drawn,
      sealed: $sealed,
      totalDrawn: $totalDrawn,
      tarot: $tarot
    }
  ) {
    ...FullChaosBagResult
  }
}

mutation chaosBagClearTokens(
  $campaign_id: Int!,
  $bless: Int!,
  $curse: Int!
) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      drawn: []
      bless: $bless
      curse: $curse
    }
  ) {
    id
    drawn
    bless
    curse
  }
}

mutation chaosBagDrawToken(
  $campaign_id: Int!,
  $drawn: jsonb!
) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      drawn: $drawn
    }
    _inc: {
      totalDrawn: 1
    }
  ) {
    id
    drawn
    totalDrawn
  }
}

mutation chaosBagResetBlessCurse(
  $campaign_id: Int!,
  $drawn: jsonb!,
  $sealed: jsonb!
) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      bless: 0
      curse: 0
      drawn: $drawn
      sealed: $sealed
    }
  ) {
    id
    bless
    curse
    drawn
    sealed
  }
}

mutation chaosBagSealTokens(
  $campaign_id: Int!,
  $sealed: jsonb!
) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      sealed: $sealed
    }
  ) {
    id
    sealed
  }
}

mutation chaosBagSetBlessCurse($campaign_id: Int!, $bless: Int!, $curse: Int!) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      bless: $bless
      curse: $curse
    }
  ) {
    id
    bless
    curse
  }
}


mutation chaosBagSetTarot($campaign_id: Int!, $tarot: chaos_bag_tarot_mode_enum) {
  update_chaos_bag_result_by_pk(
    pk_columns: { id: $campaign_id }
    _set: {
      tarot: $tarot
    }
  ) {
    id
    tarot
  }
}
